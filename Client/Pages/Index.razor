@page "/"
@using System.Globalization
@using Newtonsoft.Json
@using daryon_house_ui.Client.Application
@using daryon_house_ui.Shared

@inject HttpClient Http
@inject ConverterService ConverterService
@inject IJSRuntime JSRuntime

<PageTitle>Sewa Air</PageTitle>

<!-- Breadcrumb -->
<nav class="flex px-5 py-3 text-gray-700 border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-800 dark:border-gray-700 mb-4" aria-label="Breadcrumb">
    <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
        <li class="inline-flex items-center">
            <a href="#" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                <svg class="w-3 h-4 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path fill="currentColor" d="M12.275 19q.3-.025.513-.238T13 18.25q0-.35-.225-.562T12.2 17.5q-1.025.075-2.175-.562t-1.45-2.313q-.05-.275-.262-.45T7.825 14q-.35 0-.575.263t-.15.612q.425 2.275 2 3.25t3.175.875M12 22q-3.425 0-5.712-2.35T4 13.8q0-2.5 1.988-5.437T12 2q4.025 3.425 6.013 6.363T20 13.8q0 3.5-2.287 5.85T12 22"></path>
                </svg>
                Sewa Air
            </a>
        </li>
    </ol>
</nav>

@* <CurrentSession /> *@

<div class="flex items-center rounded">
    <form class="max-w-sm ">
        <select @onchange="DoChanges" id="countries" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option selected>Pilih Bulan - Tahun</option>
            @if (monthYearData != null)
            {
                foreach (var data in monthYearData)
                {
                    <option value=@data>@ConverterService.ShowMonthYearString(data)</option>
                }
            }
        </select>
    </form>
</div>

<div class="items-center text-center rounded">
    <label for="countries" class="block mb-2 text-xl font-medium text-gray-900 dark:text-white">
        @if (waterUsed?.Count > 0)
        {
            <h2>@ConverterService.MonthName(waterUsed.FirstOrDefault().Month) - @waterUsed.FirstOrDefault().Year</h2>
        }
        else
        {
            <h2>@ConverterService.MonthName(int.Parse(DateTime.Now.Month.ToString())) - @DateTime.Now.Year.ToString()</h2>
        }
    </label>
</div>

<div class="relative overflow-x-auto">
    <div id="loading" class="flex items-center justify-center fixed inset-0 bg-gray-900 bg-opacity-75 z-50 hidden">
        <div role="status" class="text-center">
            <svg aria-hidden="true" class="inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
                <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill" />
            </svg>
            <span class="sr-only">Loading...</span>
        </div>
    </div>

    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="px-6 py-3">
                    No. Rumah
                </th>
                <th scope="col" class="px-6 py-3 hidden md:table-cell">
                    Bulan Sebelumnya
                </th>
                <th scope="col" class="px-6 py-3 hidden md:table-cell">
                    Bulan Ini
                </th>
                <th scope="col" class="px-6 py-3">
                    Total Kubik
                </th>
                <th scope="col" class="px-6 py-3 hidden md:table-cell">
                    Harga Per Kubik
                </th>
                <th scope="col" class="px-6 py-3">
                    Total Harga
                </th>
            </tr>
        </thead>
        <tbody>
            @if (waterUsed?.Count > 0)
            {
                foreach (var data in waterUsed)
                {
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @data.HouseNumber
                        </th>
                        <td class="px-6 py-4 hidden md:table-cell">
                            @data.WaterUsedPrevMonth
                        </td>
                        <td class="px-6 py-4 hidden md:table-cell">
                            @data.WaterUsedCurrentMonth
                        </td>
                        <td class="px-6 py-4">
                            @data.TotalWaterUsed
                        </td>
                        <td class="px-6 py-4 hidden md:table-cell">
                            @ConverterService.CurrencyString(data.Price)
                        </td>
                        <td class="px-6 py-4">
                            <b>@ConverterService.CurrencyString(data.TotalPrice)</b>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="text-center bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                    <th colspan="6" scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                        <div id="textMessage" class="hidden">
                            Data Kosong
                        </div>
                        <div id="loadingMessage" class="text-center">
                            <div role="status">
                                <svg aria-hidden="true" class="inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
                                    <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill" />
                                </svg>
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </th>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<WaterUsed>? waterUsed;
    private List<string>? monthYearData;

    protected override async Task OnInitializedAsync()
    {
        int month = int.Parse(DateTime.Now.Month.ToString());
        int year = int.Parse(DateTime.Now.Year.ToString());

        var waterUsed2 = new WaterUsed
            {
                Month = month,
                Year = year
            };

        var responseWaterUsed = await Http.PostAsJsonAsync<WaterUsed>("WaterUsed/Get", waterUsed2);

        if (responseWaterUsed.IsSuccessStatusCode)
        {
            string responseBody = await responseWaterUsed.Content.ReadAsStringAsync();
            waterUsed = JsonConvert.DeserializeObject<List<WaterUsed>>(responseBody);
        }
        else
        {
            // Handle the case when the request was not successful
            // You might want to log the error or handle it according to your application's logic
        }

        var responseMonthYear = await Http.GetAsync("WaterUsed/MonthYear");

        if (responseMonthYear.IsSuccessStatusCode)
        {
            string responseBody = await responseMonthYear.Content.ReadAsStringAsync();
            monthYearData = JsonConvert.DeserializeObject<List<string>>(responseBody);
        }
        else
        {
            // Handle the case when the request was not successful
            // You might want to log the error or handle it according to your application's logic
        }

        await JSRuntime.InvokeVoidAsync("hideLoadingMessage");

    }

    protected async Task DoChanges(ChangeEventArgs e)
    {
        string[] subs = e.Value.ToString().Split('|');

        var waterUsed2 = new WaterUsed
            {
                Month = int.Parse(subs[0]),
                Year = int.Parse(subs[1])
            };

        var responseWaterUsed = await Http.PostAsJsonAsync<WaterUsed>("WaterUsed/Get", waterUsed2);

        if (responseWaterUsed.IsSuccessStatusCode)
        {
            string responseBody = await responseWaterUsed.Content.ReadAsStringAsync();
            waterUsed = JsonConvert.DeserializeObject<List<WaterUsed>>(responseBody);
        }
        else
        {
            // Handle the case when the request was not successful
            // You might want to log the error or handle it according to your application's logic
        }

        var responseMonthYear = await Http.GetAsync("WaterUsed/MonthYear");

        if (responseMonthYear.IsSuccessStatusCode)
        {
            string responseBody = await responseMonthYear.Content.ReadAsStringAsync();
            monthYearData = JsonConvert.DeserializeObject<List<string>>(responseBody);
        }
        else
        {
            // Handle the case when the request was not successful
            // You might want to log the error or handle it according to your application's logic
        }
    }
}